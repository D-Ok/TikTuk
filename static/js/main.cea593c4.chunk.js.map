{"version":3,"sources":["constants.js","requests/index.js","components/MenuBar/MenuBar.js","components/InfoIcon/utils.js","components/InfoIcon/InfoIcon.js","components/Video/VideoElement.js","components/Video/Video.js","components/Hashtag/Hashtag.js","components/AvatarLink/AvatarLink.js","components/Post/Post.js","components/Post/utils.js","pages/Trending/Trending.js","components/UserProfile/UserProfile.js","components/VideoGrid/VideoGrid.js","pages/UserDetails/UserDetails.js","App.js","index.js"],"names":["GLOBAL_CONSTANTS","URLS","TRENDING_FEED","USER_FEED","USER_INFO","HEADERS","options","url","method","headers","userInfoUrl","MenuBar","navigate","useNavigate","useState","userAvatar","setUserAvatar","defaultUser","useEffect","axios","request","then","response","data","user","avatarThumb","catch","error","console","AppBar","position","Toolbar","sx","justifyContent","Typography","variant","component","onClick","replace","IconButton","size","color","Avatar","alt","src","numberToText","number","Math","floor","InfoIcon","disabled","className","icon","text","fontSize","iconSize","sxObj","textNumber","disableRipple","disableFocusRipple","classnames","Icon","defaultProps","VideoElement","videoUrl","isLoad","playOnView","muted","isPlay","setIsPlay","videoElement","useRef","useInView","threshold","ref","inView","entry","current","play","pause","onVideoClick","buttonClasses","loop","controls","duration","height","width","Video","setIsLoad","rootMargin","triggerOnce","containerClasses","Hashtag","name","Link","href","underline","AvatarLink","nickName","avatar","avatarLinkClasses","Post","props","videoMeta","authorMeta","diggCount","commentCount","hashtags","postHeight","setPostHeight","window","innerHeight","postStyles","style","map","id","trendingFeedUrl","Trending","posts","setPosts","el","key","UserProfile","stats","bioLink","uniqueId","nickname","avatarLarger","signature","link","userInfo","followingCount","followerCount","videoCount","heartCount","statsInfo","VideoGrid","videos","playCount","protoTypes","prototype","UserDetails","useParams","setUserInfo","setVideos","App","path","element","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.cea593c4.chunk.js","sourcesContent":["\r\nexport const GLOBAL_CONSTANTS = {\r\n    USER_ID: 'dave.xp',\r\n    API: {\r\n        URLS: {\r\n            TRENDING_FEED: 'https://tiktok33.p.rapidapi.com/trending/feed',\r\n            USER_FEED: 'https://tiktok33.p.rapidapi.com/user/feed/',\r\n            USER_INFO: 'https://tiktok33.p.rapidapi.com/user/info/'\r\n        },\r\n        HEADERS: {\r\n            \"x-rapidapi-host\": \"tiktok33.p.rapidapi.com\",\r\n            \"x-rapidapi-key\": \"c1257dc04cmshd888bbb072eb770p1f2b8ajsnbf16d4cd1d66\"\r\n            // 'x-rapidapi-host': 'tiktok33.p.rapidapi.com',\r\n            // 'x-rapidapi-key': '9c8f4774d9msh89641571722eec4p101783jsn3aa9bb423412'\r\n        }\r\n    }\r\n}\r\n","import axios from \"axios\";\r\nimport {GLOBAL_CONSTANTS} from \"../constants\";\r\n\r\nconst { API: {HEADERS, URLS}} = GLOBAL_CONSTANTS;\r\nexport const options = (url, method = 'GET', headers = {}) => {\r\n    return {\r\n        method,\r\n        url,\r\n        headers: { ... HEADERS, ...headers}\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport AppBar from '@mui/material/AppBar';\r\nimport Toolbar from '@mui/material/Toolbar';\r\nimport Typography from '@mui/material/Typography';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport AccountCircle from '@mui/icons-material/AccountCircle';\r\nimport {useNavigate} from 'react-router-dom';\r\nimport {GLOBAL_CONSTANTS} from \"../../constants\";\r\nimport {useEffect, useState} from \"react\";\r\nimport axios from \"axios\";\r\nimport {options} from \"../../requests\";\r\nimport {Avatar} from \"@mui/material\";\r\n\r\nconst userInfoUrl = GLOBAL_CONSTANTS.API.URLS.USER_INFO;\r\n\r\nexport default function MenuBar() {\r\n    const navigate = useNavigate();\r\n    const [userAvatar, setUserAvatar] = useState('')\r\n\r\n    const defaultUser = GLOBAL_CONSTANTS.USER_ID;\r\n    useEffect(()=> {\r\n        axios.request(options(userInfoUrl + defaultUser)).then(function (response) {\r\n             setUserAvatar(response.data.user.avatarThumb)\r\n        }).catch(function (error) {\r\n            console.error(error);\r\n        });\r\n    }, [])\r\n\r\n    return (\r\n        <AppBar position=\"fixed\">\r\n            <Toolbar sx={{justifyContent: 'space-between'}}>\r\n                <Typography variant=\"h6\" component=\"div\" onClick={() => navigate('/', {replace: true})}>\r\n                    TikTuk\r\n                </Typography>\r\n                <div>\r\n                    <IconButton\r\n                        size=\"large\"\r\n                        aria-label=\"account of current user\"\r\n                        aria-controls=\"menu-appbar\"\r\n                        aria-haspopup=\"true\"\r\n                        onClick={() => navigate(`/user/${defaultUser}`, {replace: true})}\r\n                        color=\"inherit\"\r\n                    >\r\n                        {userAvatar\r\n                            ? <Avatar alt={defaultUser} src={userAvatar}/>\r\n                            : <AccountCircle/>\r\n                        }\r\n                    </IconButton>\r\n                </div>\r\n            </Toolbar>\r\n        </AppBar>\r\n    );\r\n}\r\n","export const numberToText = (number) => {\r\n    if(!number)\r\n        return\r\n    switch (true){\r\n        case number<1000:\r\n            return number;\r\n        case number<1000000:\r\n            return Math.floor(number/1000) + 'k';\r\n        default:\r\n            return Math.floor(number/1000000) + 'm';\r\n    }\r\n}","import propTypes from \"prop-types\";\r\nimport {IconButton} from \"@mui/material\";\r\nimport Icon from '@mui/material/Icon';\r\nimport {numberToText} from \"./utils\";\r\nimport classnames from 'classnames';\r\n\r\nconst InfoIcon = ({disabled, className, icon, number, color, text, fontSize, iconSize}) => {\r\n\r\n    const sxObj =  iconSize ? {fontSize: iconSize} : {}\r\n   const textNumber = numberToText(number)\r\n    return (\r\n        <IconButton\r\n            disableRipple={disabled}\r\n            disableFocusRipple={disabled}\r\n            color={color}\r\n            aria-label=\"upload picture\"\r\n            component=\"span\"\r\n            className={classnames(className, 'info-icon-container')}\r\n        >\r\n            <Icon fontSize={fontSize}  sx={sxObj}>{icon}</Icon>\r\n            {text && <span className='info-icon-text'>{text}:</span>}\r\n            {textNumber && <span className='info-icon-text'>{textNumber}</span>}\r\n        </IconButton>\r\n    );\r\n}\r\n\r\nInfoIcon.defaultProps = {\r\n    icon: 'favorite',\r\n    color: 'error',\r\n    fontSize: 'medium'\r\n}\r\n\r\nInfoIcon.propTypes = {\r\n    icon: propTypes.string,\r\n    number: propTypes.number,\r\n    text: propTypes.string,\r\n    color: propTypes.oneOf(['inherit','default','primary','secondary', 'error', 'info',\r\n    'success', 'warning']),\r\n    fontSize: propTypes.oneOf(['inherit', 'large', 'medium', 'small']),\r\n    iconSize: propTypes.number,\r\n    className: propTypes.string,\r\n    disabled: propTypes.bool\r\n}\r\n\r\nexport default InfoIcon;","import propTypes from \"prop-types\";\r\nimport InfoIcon from \"../InfoIcon/InfoIcon\";\r\nimport {useEffect, useRef, useState} from \"react\";\r\nimport classnames from 'classnames';\r\nimport {useInView} from \"react-intersection-observer\";\r\n\r\nconst VideoElement = ({videoUrl, isLoad, playOnView, muted }) => {\r\n    const [isPlay, setIsPlay] = useState(false);\r\n    const videoElement = useRef(null)\r\n\r\n    const { ref, inView, entry } = useInView({\r\n        threshold: 0.6\r\n    });\r\n\r\n    useEffect(() => {\r\n        setIsPlay(isLoad && playOnView);\r\n    }, [isLoad, playOnView])\r\n\r\n    useEffect(()=>{\r\n        // const isFullyVisible = entry && entry.intersectionRatio > 0.6\r\n        if(!playOnView || !isPlay )\r\n            return;\r\n\r\n        if(inView )\r\n            videoElement.current.play();\r\n        else\r\n            videoElement.current.pause();\r\n\r\n    }, [inView, playOnView, videoUrl, isPlay, entry])\r\n\r\n    const onVideoClick = () => {\r\n        if(isPlay)\r\n            videoElement.current.pause();\r\n        else\r\n            videoElement.current.play();\r\n\r\n        setIsPlay(!isPlay);\r\n    }\r\n\r\n    const buttonClasses = classnames(\r\n        'video-button',\r\n        {'--display': playOnView && !isPlay && isLoad }\r\n    );\r\n\r\n    return (\r\n        <div className={'video-element-container'} ref={ref}>\r\n            <video muted={muted}\r\n                   loop\r\n                   onClick={onVideoClick}\r\n                   src = {isLoad ? videoUrl: ''}\r\n                   ref={videoElement}\r\n            > </video>\r\n            <div className={buttonClasses}  onClick={onVideoClick}>\r\n                <InfoIcon color={'default'} icon={'play_arrow'} iconSize={100}/>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nVideoElement.defaultProps = {\r\n    muted: true,\r\n    controls: true,\r\n    duration: 11,\r\n    height: 1024,\r\n    width: 576,\r\n    videoUrl: \"https://v39-eu.tiktokcdn.com/a2144d6d51de21e456077881018c5f87/61930025/video/tos/useast2a/tos-useast2a-ve-0068c004/c5f6c64a47b04ecd91168fd9d921009c/?a=1233&br=2536&bt=1268&cd=0%7C0%7C1&ch=0&cr=0&cs=0&cv=1&dr=0&ds=3&er=&ft=wZ~R_F5qkag3-I&l=2021111518492901019021807024301368&lr=tiktok_m&mime_type=video_mp4&net=0&pl=0&qs=0&rc=amxqNjQ6ZjtkNzMzNzczM0ApMzo6OTo1NGU1Nzk2OzczO2dxc2ZzcjRfNGxgLS1kMTZzc2BeMjQxNC02XjUwLS8uYjA6Yw%3D%3D&vl=&vr=\",\r\n}\r\n\r\nVideoElement.propTypes = {\r\n    duration: propTypes.number,\r\n    height: propTypes.number,\r\n    width: propTypes.number,\r\n    videoUrl: propTypes.string,\r\n    className: propTypes.string,\r\n    controls: propTypes.bool,\r\n    playOnView: propTypes.bool,\r\n    muted: propTypes.bool\r\n}\r\n\r\nexport default VideoElement;","import propTypes from \"prop-types\";\r\nimport InfoIcon from \"../InfoIcon/InfoIcon\";\r\nimport {useEffect, useRef, useState} from \"react\";\r\nimport classnames from 'classnames';\r\nimport {useInView} from \"react-intersection-observer\";\r\nimport VideoElement from \"./VideoElement\";\r\n\r\nconst Video = ({muted, playOnView, videoUrl, className, controls}) => {\r\n    const [isLoad, setIsLoad] = useState(false)\r\n\r\n    const { ref, inView, entry } = useInView({\r\n        rootMargin: '100px',\r\n        triggerOnce: true\r\n    });\r\n\r\n    useEffect(()=>{\r\n        if(inView && !isLoad)\r\n            setIsLoad(true);\r\n    }, [inView, isLoad])\r\n\r\n\r\n    const containerClasses = classnames(\r\n        {[className]: true},\r\n        'video-container'\r\n    )\r\n\r\n    return (\r\n        <div className={containerClasses}  ref={ref}>\r\n           <VideoElement videoUrl={videoUrl}\r\n                         isLoad={isLoad}\r\n                         playOnView={playOnView}\r\n                         muted={muted}\r\n           />\r\n        </div>\r\n    );\r\n}\r\n\r\nVideo.defaultProps = {\r\n    muted: true,\r\n    controls: true,\r\n    duration: 11,\r\n    height: 1024,\r\n    width: 576,\r\n    videoUrl: \"https://v39-eu.tiktokcdn.com/a2144d6d51de21e456077881018c5f87/61930025/video/tos/useast2a/tos-useast2a-ve-0068c004/c5f6c64a47b04ecd91168fd9d921009c/?a=1233&br=2536&bt=1268&cd=0%7C0%7C1&ch=0&cr=0&cs=0&cv=1&dr=0&ds=3&er=&ft=wZ~R_F5qkag3-I&l=2021111518492901019021807024301368&lr=tiktok_m&mime_type=video_mp4&net=0&pl=0&qs=0&rc=amxqNjQ6ZjtkNzMzNzczM0ApMzo6OTo1NGU1Nzk2OzczO2dxc2ZzcjRfNGxgLS1kMTZzc2BeMjQxNC02XjUwLS8uYjA6Yw%3D%3D&vl=&vr=\",\r\n}\r\n\r\nVideo.propTypes = {\r\n    duration: propTypes.number,\r\n    height: propTypes.number,\r\n    width: propTypes.number,\r\n    videoUrl: propTypes.string,\r\n    className: propTypes.string,\r\n    controls: propTypes.bool,\r\n    playOnView: propTypes.bool,\r\n    muted: propTypes.bool\r\n}\r\n\r\nexport default Video;","import propTypes from \"prop-types\";\r\nimport {Link} from \"@mui/material\";\r\n\r\nconst Hashtag = ({name}) => {\r\n    return <span><Link component=\"button\" href=\"#\" disabled underline={'hover'}>#{name}</Link> </span>\r\n}\r\n\r\nHashtag.defaultProps = {\r\n    name: ''\r\n}\r\n\r\nHashtag.propTypes = {\r\n    name: propTypes.string\r\n}\r\n\r\nexport default Hashtag;\r\n","import propTypes from \"prop-types\";\r\nimport {Avatar, Link} from \"@mui/material\";\r\nimport {useNavigate} from 'react-router-dom';\r\nimport classnames from 'classnames';\r\n\r\nconst AvatarLink = ({name, nickName, avatar, className}) => {\r\n    const navigate = useNavigate();\r\n\r\n    const avatarLinkClasses = classnames({[`${className}`]: true}, 'avatar-link-container')\r\n\r\n    return <div\r\n        className={avatarLinkClasses}\r\n        onClick={() => navigate(`/user/${name}`, {replace: true})}\r\n    >\r\n        <Avatar alt={nickName} src={avatar} className={'avatar-icon'}/>\r\n        <div className={'avatar-text'}>\r\n            <Link href=\"#\" underline={'hover'}>{name}</Link>\r\n            <span className={'avatar-nickname'}>{nickName}</span>\r\n        </div>\r\n    </div>\r\n}\r\n\r\nAvatarLink.defaultProps = {\r\n    name: \"dave.xp\",\r\n    nickName: 'Dave XP',\r\n    avatar: \"https://p16-sign-va.tiktokcdn.com/tos-maliva-avt-0068/8dedfc004fb5d07eb5bda02770d198cd~c5_100x100.jpeg?x-expires=1637082000&x-signature=8iQRSKQWKaCtmkpDCoW487iD7hc%3D\"\r\n}\r\n\r\nAvatarLink.propTypes = {\r\n    name: propTypes.string,\r\n    nickName: propTypes.string,\r\n    avatar: propTypes.string,\r\n    className: propTypes.string\r\n}\r\n\r\nexport default AvatarLink;\r\n","import propTypes from \"prop-types\";\r\nimport classnames from 'classnames';\r\nimport Video from \"../Video/Video\";\r\nimport Hashtag from \"../Hashtag/Hashtag\";\r\nimport InfoIcon from \"../InfoIcon/InfoIcon\";\r\nimport AvatarLink from \"../AvatarLink/AvatarLink\";\r\nimport {useEffect, useState} from \"react\";\r\nimport {calculateHeight} from \"./utils\";\r\nimport Typography from \"@mui/material/Typography\";\r\n\r\nconst Post = (props) => {\r\n    const {videoUrl, videoMeta, text, authorMeta, diggCount, commentCount, hashtags} = props\r\n    const [postHeight, setPostHeight] = useState(300);\r\n\r\n    useEffect(() => {\r\n        let postHeight = calculateHeight();\r\n        setPostHeight(postHeight);\r\n    }, [])\r\n\r\n    const postStyles = {\r\n        height: postHeight,\r\n        width: (postHeight*9)/8 + 20\r\n    }\r\n\r\n    if(!videoMeta)\r\n        return <></>;\r\n\r\n    return (\r\n        <div className={'post-container'} style={postStyles}>\r\n            <Video {...videoMeta} videoUrl={videoUrl} playOnView/>\r\n            <div className={'post-info-container'}>\r\n                {authorMeta && <AvatarLink {...authorMeta}/>}\r\n\r\n                <hr className={'post-divider'}/>\r\n                <Typography variant=\"body1\" component=\"div\" className={'post-text'}>{text}</Typography>\r\n                <div className={'post-hashtags'}>\r\n                    {hashtags.map( ({id, name}) => <Hashtag name={name} key={id}/>)}\r\n                </div>\r\n\r\n                <hr className={'post-divider'}/>\r\n                <div className={'post-reactions'}>\r\n                    <InfoIcon number={diggCount}/>\r\n                    <InfoIcon icon={'forum'} color={'primary'} number={commentCount}/>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nPost.defaultProps = {\r\n    hashtags: [],\r\n    diggCount: 0,\r\n    commentCount: 0\r\n}\r\n\r\nPost.propTypes = {\r\n    videoMeta: propTypes.shape({\r\n        duration: propTypes.number,\r\n        height: propTypes.number,\r\n        width: propTypes.number,\r\n    }),\r\n    videoUrl: propTypes.string,\r\n    authorMeta: propTypes.objectOf(AvatarLink),\r\n    text: propTypes.string,\r\n    diggCount: propTypes.number,\r\n    commentCount: propTypes.number,\r\n    hashtags: propTypes.arrayOf(propTypes.shape({\r\n        id: propTypes.string,\r\n        name: propTypes.string\r\n    }))\r\n}\r\n\r\nexport default Post;","export const calculateHeight = () =>{\r\n    //64x - MenuBar\r\n    let pageHeight = window.innerHeight - 64;\r\n    return pageHeight*0.9;\r\n}","import {Button} from \"@mui/material\";\r\nimport {getTrendingFeed, options} from \"../../requests\";\r\nimport Post from \"../../components/Post/Post\";\r\nimport {useEffect, useState} from \"react\";\r\nimport axios from \"axios\";\r\nimport {GLOBAL_CONSTANTS} from '../../constants'\r\n\r\nconst trendingFeedUrl = GLOBAL_CONSTANTS.API.URLS.TRENDING_FEED;\r\n\r\nconst Trending = () => {\r\n    const [posts, setPosts] = useState([]);\r\n\r\n    useEffect(()=> {\r\n        axios.request(options(trendingFeedUrl)).then(function (response) {\r\n            setPosts(response.data)\r\n        }).catch(function (error) {\r\n            console.error(error);\r\n        });\r\n    }, [])\r\n\r\n    return (\r\n        <>\r\n            {posts.map((el) => <Post {...el} key={el.id}/>)}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Trending","import {Typography, Link} from \"@mui/material\";\r\nimport AvatarLink from \"../AvatarLink/AvatarLink\";\r\nimport propTypes from \"prop-types\";\r\nimport * as React from \"react\";\r\nimport InfoIcon from \"../InfoIcon/InfoIcon\";\r\n\r\nconst UserProfile = ({stats, user}) => {\r\n    const userInfo = () => {\r\n        if (!user)\r\n            return <></>\r\n\r\n        const bioLink = user.bioLink ;\r\n        return <>\r\n            <AvatarLink\r\n                className={'profile-avatar'}\r\n                name={user.uniqueId}\r\n                nickName={user.nickname}\r\n                avatar={user.avatarLarger}\r\n            />\r\n            <Typography variant=\"body1\" component=\"p\" >\r\n                {user.signature}\r\n            </Typography>\r\n            {bioLink && <Link href={bioLink.link}>{bioLink.link}</Link>}\r\n        </>\r\n    }\r\n\r\n    const statsInfo = () => {\r\n        if (!stats)\r\n            return <></>\r\n\r\n        const {followingCount, followerCount, videoCount, heartCount} = stats;\r\n        return <div className={'profile-icon-group'}>\r\n            <InfoIcon disabled number={heartCount} text={'Hearts'} />\r\n            <InfoIcon number={videoCount}\r\n                      text={'Videos'}\r\n                      icon={'play_circle'}\r\n                      color={'info'}\r\n            />\r\n            <InfoIcon number={followerCount}\r\n                      text={'Followers'}\r\n                      icon={'visibility'}\r\n                      color={'success'}\r\n            />\r\n            <InfoIcon number={followingCount}\r\n                      text={'Following'}\r\n                      icon={'face'}\r\n                      color={'default'}\r\n            />\r\n        </div>\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {userInfo()}\r\n            {statsInfo()}\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nUserProfile.propTypes = {\r\n    stats: propTypes.shape({\r\n        diggCount: propTypes.number,\r\n        followerCount: propTypes.number,\r\n        followingCount: propTypes.number,\r\n        heartCount: propTypes.number,\r\n        videoCount: propTypes.number\r\n    }),\r\n    user: propTypes.shape({\r\n        avatarLarger: propTypes.string,\r\n        avatarMedium: propTypes.string,\r\n        avatarThumb: propTypes.string,\r\n        bioLink: propTypes.shape({\r\n            link: propTypes.string,\r\n            risk: propTypes.number\r\n        }),\r\n        id: propTypes.string,\r\n        nickname: propTypes.string,\r\n        uniqueId: propTypes.string,\r\n        verified: propTypes.bool,\r\n        signature: propTypes.string\r\n    })\r\n}\r\n\r\nexport default UserProfile;","import * as prototype from \"prop-types\";\r\nimport Video from \"../Video/Video\";\r\nimport {Icon} from \"@mui/material\";\r\nimport {numberToText} from \"../InfoIcon/utils\";\r\n\r\nconst VideoGrid = ({videos}) => {\r\n\r\n    const videoContainer = ({videoUrl, playCount}) => {\r\n        return <div className={'user-video-container'}>\r\n            <Video controls={false} videoUrl={videoUrl} className={'user-video-display'}/>\r\n            <div className={'user-video-info'}>\r\n                <Icon fontSize={'large'}>play_arrow</Icon>\r\n                <span>{numberToText(playCount)}</span>\r\n            </div>\r\n        </div>\r\n    }\r\n\r\n    return <div className={'video-grid'}>\r\n        {videos && videos.map(videoContainer)}\r\n    </div>\r\n}\r\n\r\nVideoGrid.protoTypes = {\r\n    videos: prototype.arrayOf(prototype.shape({\r\n        videoUrl: prototype.string,\r\n        playCount: prototype.number\r\n    }))\r\n}\r\n\r\nexport default VideoGrid","import { useParams } from \"react-router\";\r\nimport {useEffect, useState} from \"react\";\r\nimport axios from \"axios\";\r\nimport {options} from \"../../requests\";\r\nimport {GLOBAL_CONSTANTS} from \"../../constants\";\r\nimport UserProfile from \"../../components/UserProfile/UserProfile\";\r\nimport VideoGrid from \"../../components/VideoGrid/VideoGrid\";\r\n\r\nconst {USER_INFO, USER_FEED, TRENDING_FEED} = GLOBAL_CONSTANTS.API.URLS;\r\nconst UserDetails = () => {\r\n    let { uniqueId } = useParams();\r\n    const [userInfo, setUserInfo] = useState(null);\r\n    const [videos, setVideos] = useState([])\r\n\r\n    const getUserInfo = () => {\r\n        axios.request(options(USER_INFO + uniqueId)).then(function (response) {\r\n            setUserInfo(response.data);\r\n        }).catch(function (error) {\r\n            console.error(error);\r\n        });\r\n    }\r\n\r\n    const getUserFeed = () => {\r\n        //USER_FEED + uniqueId\r\n        axios.request(options(TRENDING_FEED)).then(function (response) {\r\n            setVideos(response.data);\r\n        }).catch(function (error) {\r\n            console.error(error);\r\n        });\r\n    }\r\n    useEffect(() => {\r\n        getUserInfo();\r\n        getUserFeed();\r\n    }, [uniqueId]);\r\n\r\n    return (\r\n        <div>\r\n            <UserProfile {...userInfo}/>\r\n            <VideoGrid videos={videos}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default  UserDetails;","import './App.css';\nimport MenuBar from \"./components/MenuBar/MenuBar\";\nimport {MemoryRouter, Routes, Route } from 'react-router-dom';\n\n\nimport Trending from \"./pages/Trending/Trending\";\nimport UserDetails from \"./pages/UserDetails/UserDetails\";\n\nfunction App() {\n    return (\n        <MemoryRouter >\n            <div className=\"App\">\n                <MenuBar/>\n\n                <Routes>\n                    <Route path='/' element={<Trending/>} />\n                    <Route path='/user' >\n                        <Route path=\":uniqueId\" element={<UserDetails />} />\n                    </Route>\n                </Routes>\n            </div>\n        </MemoryRouter>\n    );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n        <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}